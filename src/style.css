:root {
  font-family: Roboto, Helvetica, Arial, sans-serif;
  line-height: 1.43;
  font-weight: 500;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  --primary: #177AB0;
  --on-primary: #0000002e;

  --secondary: #080808;

  --text: #ffffff;
  --text-accent: rgb(187, 153, 255);

  color: var(--text);
}

#app {
  max-width: 400px;
  text-align: center;
}

ul {
  display: inline-block;
  list-style-type: none;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

ol {
  list-style: disc;
  margin-block-start: 0;
  margin-block-end: 0;
}

 li {
  float: left;
 }

 li a {
  display: block;
  color: var(--text);
  text-align: center;
  padding: 16px;
  text-decoration: none;
}

li a:hover {
  background-color: var(--on-primary);
}

a.is-active {
  color: var(--text-accent);
}

.content {
  width: 100%;
  height: 100%;
}

.row {
  display: flex;
}

.column {
  flex: 50%;
}

.container {
  display: grid;
  width: 90%;
}

input, textarea {
  border: none;
  border-radius: 5px;
  color: var(--text);
  background-color: var(--on-primary);
}

input:disabled, textarea:disabled {
  opacity: 0.7;
}

input, textarea {
  padding-left: 0.5rem;
}

input[type='number'], input[type='text'] {
  font-size: large;
}

input[type='number']::-webkit-inner-spin-button, 
input[type='number']::-webkit-outer-spin-button { 
    -webkit-appearance: none;
    margin: 0;
}

input:hover, textarea:hover, select:hover, option:hover {
  /*transform: scale(1.01);*/
}

select {
  border: none;
  border-radius: 5px;
  color: var(--text);
  background-color: var(--on-primary);
}

option {
  background: var(--on-primary);
  background-color: var(--secondary);
  opacity: 0.6;
  padding: 5px;
}

/* Tooltip container */
.tooltip {
  position: relative;
  display: table;
}

/* Tooltip text */
.tooltip .tooltiptext {
    color: var(--text);
    visibility: hidden;
    width: 100%;
    background-color: var(--on-primary);
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;
    
    /* Position the tooltip text - see examples below! */
    z-index: 1;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
}

.tooltip .tooltiptext {
    left: 0%;
    bottom: 0px;
    position: fixed;
}

input.show-button {
  filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(269deg) brightness(103%) contrast(107%);
  background-image: url(/shown.svg); /* 16px x 16px */
  background-color: transparent; /* make the button transparent */
  background-repeat: no-repeat;  /* make the background image appear only once */
  background-position: 0px 0px;  /* equivalent to 'top left' */
  border: none;           /* assuming we don't want any borders */
  cursor: pointer;        /* make the cursor like hovering over an <a> element */
  height: 25px;           /* make this the size of your image */
  width: 25px;
}

input.hide-button {
  filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(269deg) brightness(103%) contrast(107%);
  background-image: url(/hidden.svg); /* 16px x 16px */
  background-color: transparent; /* make the button transparent */
  background-repeat: no-repeat;  /* make the background image appear only once */
  background-position: 0px 0px;  /* equivalent to 'top left' */
  border: none;           /* assuming we don't want any borders */
  cursor: pointer;        /* make the cursor like hovering over an <a> element */
  height: 25px;           /* make this the size of your image */
  width: 25px;
}

input.add-button {
  filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(269deg) brightness(103%) contrast(107%);
  background-image: url(/add.svg); /* 16px x 16px */
  background-color: transparent; /* make the button transparent */
  background-repeat: no-repeat;  /* make the background image appear only once */
  background-position: 0px 0px;  /* equivalent to 'top left' */
  border: none;           /* assuming we don't want any borders */
  cursor: pointer;        /* make the cursor like hovering over an <a> element */
  height: 25px;           /* make this the size of your image */
  width: 25px;
}

input.external-link-button {
  filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(269deg) brightness(103%) contrast(107%);
  background-image: url(/external-link.svg); /* 16px x 16px */
  margin-top: 5px;
  background-color: transparent; /* make the button transparent */
  background-repeat: no-repeat;  /* make the background image appear only once */
  background-position: 0px 0px;  /* equivalent to 'top left' */
  border: none;           /* assuming we don't want any borders */
  cursor: pointer;        /* make the cursor like hovering over an <a> element */
  height: 25px;           /* make this the size of your image */
  width: 25px;
  
}

input.remove-button {
  filter: invert(13%) sepia(89%) saturate(7390%) hue-rotate(0deg) brightness(99%) contrast(111%);
  background-image: url(/remove.svg); /* 16px x 16px */
  background-color: transparent; /* make the button transparent */
  background-repeat: no-repeat;  /* make the background image appear only once */
  background-position: 0px 0px;  /* equivalent to 'top left' */
  border: none;           /* assuming we don't want any borders */
  cursor: pointer;        /* make the cursor like hovering over an <a> element */
  height: 25px;           /* make this the size of your image */
  width: 25px;
  margin: auto;

  padding-inline: 1.25rem;
}

/* Text Size */
p {
  font-size: 0.875rem;
  cursor: default;
}

.collapsible {
  display: inline-flex;
  background-color: var(--on-primary);
  cursor: pointer;
  padding: 0.25rem;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
}

/** Scrollbar **/
* {
  scrollbar-width: thin;
  scrollbar-color: var(--on-primary) var(--on-primary);
}

/* Works on Chrome, Edge, and Safari */
*::-webkit-scrollbar {
  width: 12px;
}

*::-webkit-scrollbar-track {
  background: var(--on-primary);
}

*::-webkit-scrollbar-thumb {
  background-color: var(--on-primary);
  border-radius: 20px;
  border: 3px solid var(--on-primary);
}

hr {
  border-width: 0px 0px thin;
  border-style: solid;
  opacity: 0.1;
  border-color: var(--text);
}